version: "3.9"

services:
  nginx:
    build: ./nginx
    image: nirmalAzureContainerRegistry.azurecr.io/nginx:v2
    container_name: cn_nginx
    depends_on:
      - dashboard
      - logs
      - users
    ports:
      - "80:80"

  dashboard:
    build: ./backend/dashboard
    image: nirmalAzureContainerRegistry.azurecr.io/dashboard:v1
    container_name: cn_dashboard
    env_file:
      - .env
    ports:
      - "3000:3000"
    command: node dist/server.js
    depends_on:
      - logs
      - exercise
      # - redis-database

  logs:
    build: ./backend/logs
    image: nirmalAzureContainerRegistry.azurecr.io/logs:v1
    env_file:
      - .env
    container_name: ch_journal_logs
    ports:
      - "4000:3000"
    command: node dist/server.js

  users:
    build: ./backend/users
    image: nirmalAzureContainerRegistry.azurecr.io/users:v1
    env_file:
      - .env
    container_name: cn_users
    ports:
      - "5000:3000"
    command: node dist/server.js

  notifications:
    build: ./backend/notifications
    image: nirmalAzureContainerRegistry.azurecr.io/notifications:v1
    env_file:
      - .env
    container_name: cn_notifications
    ports:
      - "6000:3000"
    command: node dist/server.js
    depends_on:
      - logs

  exercise:
    build: ./backend/exercise
    image: nirmalAzureContainerRegistry.azurecr.io/exercise:v1
    env_file:
      - .env
    container_name: cn_exercise
    ports:
      - "7000:3000"
    command: node dist/server.js
#   redis-database:
#     image: redis/redis-stack:latest
#     image: cloudnativekubernetesservices.azurecr.io/redis-stack
#     container_name: redis-stack
#     ports:
#       - "6379:6379"
#       - "8001:8001"
#     restart: always
#     volumes:
#       - redisData:/data

# volumes:
#   redisData:
